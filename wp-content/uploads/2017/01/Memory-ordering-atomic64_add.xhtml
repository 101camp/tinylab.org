<?xml version="1.0" encoding="UTF-8"?>
<html xml:lang="zh-Hans" xmlns="http://www.w3.org/1999/xhtml"><head><link rel="stylesheet" href="Memory-ordering-atomic64_add.css" type="text/css"/><meta charset="UTF-8"/></head><body><div class="body" style="white-space:pre-wrap; line-break:strict;"><table class="s2" style="margin-left:0.0px;width:79.3%;border-collapse:collapse"><colgroup><col style="width:32.8%"/><col style="width:34.0%"/><col style="width:11.2%"/><col style="width:3.9%"/><col style="width:3.8%"/><col style="width:12.3%"/><col style="width:12.0%"/></colgroup><tr style="height:9.1%"><td class="s3"><p> </p></td><td colspan="6" class="s6 s4 s5"><span dir="ltr">ATOMIC64_OPS(add, add)：</span></td></tr><tr style="height:9.1%"><td class="s9 s4 s5"><span dir="ltr">atomic64_add</span></td><td class="s12 s4 s5"><span dir="ltr">ATOMIC64_OP(add, add)</span></td><td class="s15"><p> </p></td><td class="s15"><p> </p></td><td class="s15"><p> </p></td><td class="s15"><p> </p></td><td class="s15"><p> </p></td></tr><tr style="height:9.1%"><td class="s9 s4 s5"><span dir="ltr">atomic64_add_return</span></td><td class="s12 s4 s5"><span dir="ltr">ATOMIC64_OP_RETURN(,</span></td><td class="s16 s4 s5"><span dir="ltr">dmb ish,</span></td><td class="s19 s4 s5">,</td><td class="s22 s4 s5">l,</td><td class="s25 s4 s5"><span dir="ltr">“memory”,</span></td><td class="s28 s4 s5"><span class="c1" dir="ltr">add</span>, <span class="c2" dir="ltr">add</span><span dir="ltr">)</span></td></tr><tr style="height:9.1%"><td class="s31"><p> </p></td><td colspan="6" class="s32"><p class="s34">#define ATOMIC64_FETCH_OP(name, mb, acq, rel, cl, op, asm_op) \         </p><p class="s34"><span class="c3">long</span> atomic64_fetch_##<span class="c1">op</span>##name(<span class="c3">long</span> i, <span class="c3">atomic64_t</span> *v)         \</p><p class="s34">{                                                             \</p><p class="s34"><span class="c4">long</span> result, val;                                             \</p><p class="s34"><span class="c4">unsigned long</span> tmp;                                            \</p><p class="s34">                                                              \</p><p class="s34">    asm volatile(&quot;// atomic64_fetch_&quot; #op #name &quot;\n&quot;          \</p><p class="s34">&quot;   prfm    pstl1strm, %3\n&quot;                                  \</p><p class="s34">&quot;1: ld&quot; <span class="c5">#acq</span>    &quot;xr    %0, %3\n&quot;                              \</p><p class="s34">&quot;   &quot;   <span class="c2">#asm_op</span> &quot;     %1, %0, %4\n&quot;                          \</p><p class="s34">&quot;   st&quot; <span class="c6">#rel</span>    &quot;xr    %w2, %1, %3\n&quot;                         \</p><p class="s34">&quot;   cbnz    %w2, 1b\n&quot;                                        \</p><p class="s34">&quot;   &quot; <span class="c7">#mb</span>                                                     \</p><p class="s34">: &quot;=&amp;r&quot; (result), &quot;=&amp;r&quot; (val), &quot;=&amp;r&quot; (tmp), &quot;+Q&quot; (v-&gt;counter) \</p><p class="s34">: &quot;Ir&quot; (i)                                                    \</p><p class="s34">: <span class="c8">cl</span>);                                                        \</p><p class="s34">                                                              \</p><p class="s34">return result;                                                \</p><p class="s34">}</p></td></tr><tr style="height:9.1%"><td class="s9 s4 s5"><span dir="ltr">atomic64_add_return</span><span class="c9" dir="ltr">_relaxed</span></td><td class="s12 s4 s5"><span dir="ltr">ATOMIC64_OP_RETURN(</span><span class="c9" dir="ltr">_relaxed</span><span dir="ltr">,</span></td><td class="s28 s4 s5">,</td><td class="s28 s4 s5">,</td><td class="s28 s4 s5">,</td><td class="s28 s4 s5">,</td><td class="s28 s4 s5"><span dir="ltr">add, add)</span></td></tr><tr style="height:9.1%"><td class="s9 s4 s5"><span dir="ltr">atomic64_add_return</span><span class="c9" dir="ltr">_acquire</span></td><td class="s12 s4 s5"><span dir="ltr">ATOMIC64_OP_RETURN(</span><span class="c9" dir="ltr">_acquire</span>,</td><td class="s28 s4 s5">,</td><td class="s28 s4 s5">a,</td><td class="s28 s4 s5">,</td><td class="s28 s4 s5"><span dir="ltr">“memory”,</span></td><td class="s28 s4 s5"><span dir="ltr">add, add)</span></td></tr><tr style="height:9.1%"><td class="s9 s4 s5"><span dir="ltr">atomic64_add_return</span><span class="c9" dir="ltr">_release</span></td><td class="s12 s4 s5"><span dir="ltr">ATOMIC64_OP_RETURN(</span><span class="c9" dir="ltr">_release</span>,</td><td class="s28 s4 s5">,</td><td class="s28 s4 s5">,</td><td class="s28 s4 s5">l,</td><td class="s28 s4 s5"><span dir="ltr">“memory”,</span></td><td class="s28 s4 s5"><span dir="ltr">add, add)</span></td></tr><tr style="height:9.1%"><td class="s9 s4 s5"><span dir="ltr">atomic64_fetch_add</span></td><td class="s12 s4 s5"><span dir="ltr">ATOMIC64_FETCH_OP(,</span></td><td class="s28 s4 s5"><span dir="ltr">dmb ish,</span></td><td class="s28 s4 s5">,</td><td class="s28 s4 s5">l,</td><td class="s28 s4 s5"><span dir="ltr">“memory”,</span></td><td class="s28 s4 s5"><span dir="ltr">add, add)</span></td></tr><tr style="height:9.1%"><td class="s9 s4 s5"><span dir="ltr">atomic64_fetch_add</span><span class="c9" dir="ltr">_relaxed</span></td><td class="s12 s4 s5"><span dir="ltr">ATOMIC64_FETCH_OP(</span><span class="c9" dir="ltr">_relaxed</span>,</td><td class="s28 s4 s5">,</td><td class="s28 s4 s5">,</td><td class="s28 s4 s5">,</td><td class="s28 s4 s5">,</td><td class="s28 s4 s5"><span dir="ltr">add, add)</span></td></tr><tr style="height:9.1%"><td class="s9 s4 s5"><span dir="ltr">atomic64_fetch_add</span><span class="c9" dir="ltr">_acquire</span></td><td class="s12 s4 s5"><span dir="ltr">ATOMIC64_FETCH_OP(</span><span class="c9" dir="ltr">_acquire</span>,</td><td class="s28 s4 s5">,</td><td class="s28 s4 s5">a,</td><td class="s28 s4 s5">,</td><td class="s28 s4 s5"><span dir="ltr">“memory”,</span></td><td class="s28 s4 s5"><span dir="ltr">add, add)</span></td></tr><tr style="height:9.1%"><td class="s35 s4 s5"><span dir="ltr">atomic64_fetch_add</span><span class="c9" dir="ltr">_release</span></td><td class="s36 s4 s5"><span dir="ltr">ATOMIC64_FETCH_OP(</span><span class="c9" dir="ltr">_release</span>,</td><td class="s37 s4 s5">,</td><td class="s37 s4 s5">,</td><td class="s37 s4 s5">l,</td><td class="s37 s4 s5"><span dir="ltr">“memory”,</span></td><td class="s37 s4 s5"><span dir="ltr">add, add)</span></td></tr></table></div></body></html>
